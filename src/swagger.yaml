---
openapi: 3.0.0
info:
  title: Express Template
  version: 1.0.0
  description: API documentation for a basic Express Template
servers:
  - url: http://localhost:4000
    description: Local server
paths:
  tags:
    - name: Auth
      description: Authentication endpoints
    - name: User
      description: User endpoints
  /users:
    get:
      summary: Returns a list of Users.
      description: Get all Users
      tags: [User]
      responses:
        "200":
          description: A JSON array of user names
          content:
            application/json:
              example:
                status: "success"
                statusCode: 200
                message: "Users retrieved successfully"
                data:
                  - id: "user_id"
                    username: "John Doe"
                    email: "johndoe@example.com"

  /users/{id}:
    get:
      summary: "Get User by ID"
      description: "Retrieve a specific user by ID"
      tags: [User]
      parameters:
        - name: id
          in: path
          required: true
          description: "User's ID"
          schema:
            type: string
      responses:
        "200":
          description: "User retrieved successfully"
          content:
            application/json:
              example:
                status: "success"
                statusCode: 200
                message: "User retrieved successfully"
                data:
                  - id: "user_id"
                    username: "John Doe"
                    email: "johndoe@example.com"

    put:
      summary: "Update User"
      description: "Update a user's information"
      tags: [User]
      parameters:
        - name: id
          in: path
          required: true
          description: "User's ID"
          schema:
            type: string
      requestBody:
        description: "User information to update"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: string
                email:
                  type: string
                  format: email
      responses:
        "200":
          description: "User updated successfully"
          content:
            application/json:
              example:
                status: "success"
                statusCode: 200
                message: "User updated successfully"
                data:
                  - id: "user_id"
                    username: "John Doe"
                    email: "johndoe@example.com"

    delete:
      summary: "Delete User"
      description: "Delete a user's information"
      tags: [User]
      parameters:
        - name: id
          in: path
          required: true
          description: "User's ID"
          schema:
            type: string
      responses:
        "200":
          description: "User deleted successfully"
          content:
            application/json:
              example:
                status: "success"
                statusCode: 200
                message: "User deleted successfully"
                data:
                  - id: "user_id"
                    username: "John Doe"
                    email: "johndoe@example.com"

  /auth/signup:
    post:
      summary: Create User
      description: Create a new User
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: string
                email:
                type: string
                format: email
      responses:
      "201":
        description: Successfully created product
        content:
          application/json:
            schema:
              type: object
              properties:
                statusCode:
                  type: integer
                message:
                  type: string
                data:
                  type: object
                  properties:
                    user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string

  /auth/login:
    post:
      summary: "Login"
      description: "Authenticate existing user"
      operationId: "loginUser"
      tags: [Auth]
      requestBody:
        description: "User login credentials"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: "Login successful"
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                      id:
                        type: string
                  token:
                    type: string
