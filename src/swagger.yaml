openapi: 3.0.0
info:
  title: Trustcrow API
  version: 1.0.0
  description: API documentation for a basic Task Management application
servers:
  - url: http://localhost:4000
    description: Local server
paths:
  /api/v1/auth/signup:
    post:
      summary: Create User
      description: Create a new User
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: password123
                email:
                  type: string
                  format: email
                  example: johndoe@example.com
      responses:
        "201":
          description: Successfully created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  error:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 201
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                        example: johndoe
                      email:
                        type: string
                        example: johndoe@example.com
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Username is required"
  /api/v1/auth/login:
    post:
      summary: Login
      description: Authenticate existing user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: password123
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  error:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 200
                  user:
                    type: object
                    properties:
                      username:
                        type: string
                        example: johndoe
                      id:
                        type: string
                        example: "user_id"
                  token:
                    type: string
                    example: "jwt_token"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Invalid username or password"
  /api/v1/tasks:
    post:
      summary: Create Task
      description: Create a new task
      tags: [Task]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "New Task"
                description:
                  type: string
                  example: "Task description"
      responses:
        "201":
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  error:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: "Task created successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: "New Task"
                      description:
                        type: string
                        example: "Task description"
                      userId:
                        type: string
                        example: "user_id"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Not authorized, no token"
    get:
      summary: Get Tasks
      description: Retrieve all tasks for the authenticated user
      tags: [Task]
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Tasks retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  error:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Tasks found"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: "New Task"
                        description:
                          type: string
                          example: "Task description"
                        userId:
                          type: string
                          example: "user_id"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Not authorized, no token"
  /api/v1/tasks/{id}:
    get:
      summary: Get Task by ID
      description: Retrieve a specific task by ID
      tags: [Task]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
      responses:
        "200":
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  error:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Task found"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: "New Task"
                      description:
                        type: string
                        example: "Task description"
                      userId:
                        type: string
                        example: "user_id"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Not authorized, no token"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Task not found"
    put:
      summary: Update Task
      description: Update a specific task by ID
      tags: [Task]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Updated Task"
                description:
                  type: string
                  example: "Updated description"
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  error:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Task updated successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: "Updated Task"
                      description:
                        type: string
                        example: "Updated description"
                      userId:
                        type: string
                        example: "user_id"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Not authorized, no token"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Task not found"
    delete:
      summary: Delete Task
      description: Delete a specific task by ID
      tags: [Task]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Task ID
          schema:
            type: integer
      responses:
        "200":
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  error:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: "Task deleted successfully"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      title:
                        type: string
                        example: "Deleted Task"
                      description:
                        type: string
                        example: "Task description"
                      userId:
                        type: string
                        example: "user_id"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Not authorized, no token"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "Task not found"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
